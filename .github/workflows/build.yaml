name: Build Image

  
on:

  workflow_call:
    inputs:
      repo:
        required: true
        type: string
        description: "'erpnext' or 'frappe'"
      version:
        required: true
        type: string
        description: "Major version, git tags should match 'v{version}.*'; or 'develop'"
      push:
        required: true
        type: boolean
      python_version:
        required: true
        type: string
        description: Python Version
      node_version:
        required: true
        type: string
        description: NodeJS Version
    secrets:
      DOCKERHUB_USERNAME:
        required: true
      DOCKERHUB_TOKEN:
        required: true

env:
  TOKEN: ${{ secrets.TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Source Build Env
        id: source-build-env
        
        run: |
          cat ./ci/build.env >> $GITHUB_ENV
          echo "VERSION=$(cat ./ci/version.txt)" >> $GITHUB_ENV
          echo "APPS_JSON_BASE64=$(base64 -w 0 ./ci/apps.json)" >> $GITHUB_ENV
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        run: echo "${{ secrets.PASSWORD }}" | docker login --username "${{ secrets.USERNAME }}" --password-stdin

        # with:
        #   registry: docker.io
        #   username: ${{ secrets.USERNAME }}
        #   password: ${{ secrets.PASSWORD }}

      - uses: int128/kaniko-action@v1
        with:
          push: true
          cache: true
          kaniko-args: |
            --build-arg=FRAPPE_PATH=${{ inputs.frappe-repo || env.FRAPPE_REPO }}
            --build-arg=FRAPPE_BRANCH=${{ inputs.frappe-version || env.FRAPPE_VERSION }}
            --build-arg=PYTHON_VERSION=${{ inputs.py-version || env.PY_VERSION }}
            --build-arg=NODE_VERSION=${{ inputs.nodejs-version || env.NODEJS_VERSION }}
            --build-arg=APPS_JSON_BASE64=${{ inputs.apps-json-base64 || env.APPS_JSON_BASE64 }}
            --context=${{ inputs.context || env.CONTEXT }}
            --destination=docker.io/marcrine/${{ inputs.image || env.IMAGE }}:${{ inputs.version || env.VERSION }}
            --destination=docker.io/marcrine/${{ inputs.image || env.IMAGE }}:latest
          file: ${{ inputs.dockerfile || env.DOCKERFILE }}

